169.求众数
题目：
给定一个大小为 n 的数组，找到其中的众数。众数是指在数组中出现次数大于 ⌊ n/2 ⌋ 的元素。

你可以假设数组是非空的，并且给定的数组总是存在众数。

示例 1:

输入: [3,2,3]
输出: 3
示例 2:

输入: [2,2,1,1,1,2,2]
输出: 2

思路：
题目中指出，众数是指在数组中出现次数大于 ⌊ n/2 ⌋ 的元素。因此在一个有序的数组中，位于数组
中间位置的数一定是众数。只需数组进行排序，直接返回数组中间位置的元素即可。

代码:
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int target;
        int n = nums.size();
        if(n <= 1)
            return nums[0];
        sort(nums.begin(), nums.end());
        return nums[n/2];
    }
};
