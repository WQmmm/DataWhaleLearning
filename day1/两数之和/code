1.两数之和

题目：
给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]

思路：
这是leetcode上的第一题，在给定的数组中找到两个之和为目标值的元素，并返回他们的下标。
目前主要有两种思路：1.利用暴力方法，通过遍历，对数组中的两两元素进行求和，如果两数
之和等于目标值，则返回他们的下标，但这种方法的时间复杂度较高。2.将目标值减去数组中的
任意一个元素的值，并判断该数组中是否存在与两数之差相等的元素，若存在，则返回他们的下标，
否则，重复以上步骤。

代码（暴力方法）：
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        for(int i=0;i<=nums.size()-2;i++)
            for(int j=i+1;j<=nums.size()-1;j++)
            {
                if(nums[i]+nums[j]==target)
                {
                    int a[]={i,j}
                    vector<int,int> r(a,a+2);
                    return r;
                }
            }
        vector<int> r(1,1);
        return r;;
    }
};
